{{- $root := . -}}
{{- range $service := $root.Values.Services }}
{{- if and (eq $service.name "yb-tservers") (and ($root.Values.ybc.enabled) ($root.Values.ybc.useYBDBImage)) }}
{{- $serviceValues := (dict "Service" $service "Values" $root.Values "Chart" $root.Chart "Release" $root.Release) -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "yugabyte.fullname" $root }}-controller-gflags
  namespace: "{{ $root.Release.Namespace }}"
type: Opaque
stringData:
  server.conf.template: |
    --v=1
    --server_address={{ (eq $root.Values.ip_version_support "v6_only") | ternary "[::]" "0.0.0.0" }}
    --server_port={{ index $service.ports "tcp-ybc-port" }}
    --log_dir=/mnt/disk0/ybc-data/controller/logs
    --yb_tserver_address={{ include "yugabyte.rpc_bind_address" $serviceValues }}
    --yb_tserver_webserver_port={{ index $service.ports "http-ui" }}
    --yb_admin=/home/yugabyte/tserver/bin/yb-admin
    --ysql_dump=/home/yugabyte/tserver/postgres/bin/ysql_dump
    --ysql_dumpall=/home/yugabyte/tserver/postgres/bin/ysql_dumpall
    --ysqlsh=/home/yugabyte/tserver/postgres/bin/ysqlsh
    --ycqlsh=/home/yugabyte/tserver/bin/ycqlsh
    --log_filename=yb-controller-server
    --log_utc_time=true
{{- if and $root.Values.tls.enabled $root.Values.tls.nodeToNode }}
    --certs_dir_name=/opt/certs/yugabyte
    --cert_node_filename={{ $root.Values.tserver.serverBroadcastAddress | default (include "yugabyte.server_fqdn" $serviceValues) }}
{{- end }}
{{- range $flag, $override := $root.Values.gflags.ybc }}
    --{{ $flag }}={{ $override }}
{{- end }}
---
{{- end }}
{{- end }}
